{
  "hash": "55114e9c814e07ad5a2e5328c8846670",
  "result": {
    "markdown": "---\ntitle: \"TidyTuesday: Weather Forecast Accuracy analysis\"\ndate: today \nauthor:\n  - name: Deepsha Menghani \n    url: https://github.com/deepshamenghani\ntitle-block-banner: true\nformat:\n  html:\n    theme: flatly\n    code-fold: false\n    code-tools: true\n    toc: false\n    number-sections: true\nlink-citations: yes\nserver: shiny\n---\n\n\n\n\n## Load libraries\n\n\n::: {.cell layout-align=\"center\" paged.print='false'}\n\n```{.r .cell-code}\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\n\n# EDA\nlibrary(tidyverse)\nlibrary(DT)\n\n\nlibrary(usmap)\n\nlibrary(rmarkdown)\n\n# Interactive visualization\nlibrary(plotly)\nlibrary(crosstalk)\n\nlibrary(shiny)\nlibrary(shinyWidgets)\nlibrary(shinyjs)\n```\n:::\n\n\n## Load data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Get the Data\n\n# Read in with tidytuesdayR package \n# Install from CRAN via: install.packages(\"tidytuesdayR\")\n# This loads the readme and all the datasets for the week of interest\n\nweather_forecasts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/weather_forecasts.csv')\ncities <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/cities.csv')\noutlook_meanings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/outlook_meanings.csv')\n```\n:::\n\n\n## Error counts by state {.panel-tabset}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npossible_error_counts <- weather_forecasts %>% \n  count(possible_error, state) %>% \n  arrange(state, possible_error) %>% \n  filter(possible_error == 'forecast_outlook') \n\npossible_error_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 Ã— 3\n   possible_error   state     n\n   <chr>            <chr> <int>\n 1 forecast_outlook CT        1\n 2 forecast_outlook MA        1\n 3 forecast_outlook ME       11\n 4 forecast_outlook MI        7\n 5 forecast_outlook MN       12\n 6 forecast_outlook MT       10\n 7 forecast_outlook ND       14\n 8 forecast_outlook NH        3\n 9 forecast_outlook NY        3\n10 forecast_outlook SD        2\n11 forecast_outlook TX        2\n12 forecast_outlook VT        3\n13 forecast_outlook WV        1\n14 forecast_outlook WY        7\n```\n:::\n:::\n\n\n### With fct_reorder\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npossible_error_counts %>% \n  mutate(state= fct_reorder(as_factor(state), n)) %>% \n  ggplot(aes(x = state, y = n)) +\n  geom_col(aes(color = state,fill = state), alpha = 0.2, position = \"dodge\") +\n  theme_minimal() +\n  labs(\n    title = \"Possible Error counts by state and error type\",\n    x = \"\",\n    y = \"\"\n  ) +\n  theme(legend.position = \"none\", axis.text.x = element_blank()) +\n  coord_flip() +\n  geom_label(aes(x = state, y = n, label = n))\n```\n\n::: {.cell-output-display}\n![](shinytry_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Shiny with column plot\n\nLet's instead of fixing the \"forecast_outlook\" as a possible error, take the possible error as an input to a shiny server.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nselectInput(\n        inputId  = \"input_error\",\n        label    = h3(\"Possible error type\"),\n        choices  = unique(weather_forecasts$possible_error),\n        multiple = FALSE,\n        selected = \"forecast_outlook\"\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"input_error-label\" for=\"input_error\">\n<h3>Possible error type</h3>\n</label>\n<div>\n<select id=\"input_error\"><option value=\"none\">none</option>\n<option value=\"forecast_outlook\" selected>forecast_outlook</option>\n<option value=\"forecast_temp\">forecast_temp</option>\n<option value=\"observed_temp\">observed_temp</option></select>\n<script type=\"application/json\" data-for=\"input_error\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n```\n:::\n\n```{.r .cell-code}\nplotlyOutput(outputId = \"errorplot\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"errorplot\" style=\"width:100%; height:400px; \" class=\"plotly html-widget html-widget-output shiny-report-size shiny-report-theme\"></div>\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\" context='server'}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsliderInput(\"bins\", \"Number of bins:\", \n            min = 1, max = 50, value = 30)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"bins-label\" for=\"bins\">Number of bins:</label>\n<input class=\"js-range-slider\" id=\"bins\" data-skin=\"shiny\" data-min=\"1\" data-max=\"50\" data-from=\"30\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.8\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/>\n</div>\n```\n:::\n\n```{.r .cell-code}\nplotOutput(\"distPlot\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"distPlot\" class=\"shiny-plot-output\" style=\"width:100%;height:400px;\"></div>\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\" context='server'}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nselectizeInput(\n    inputId = \"input_weather\",\n    label = h4(\"Most number of days with\"),\n    choices = unique(outlook_meanings$meaning),\n    selected = \"Rain\",\n    multiple = FALSE,\n    options = list(maxItems = 1)\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"input_weather-label\" for=\"input_weather\">\n<h4>Most number of days with</h4>\n</label>\n<div>\n<select id=\"input_weather\" class=\"form-control\"><option value=\"Dust\">Dust</option>\n<option value=\"Sunny\">Sunny</option>\n<option value=\"Mostly Cloudy\">Mostly Cloudy</option>\n<option value=\"Snow\">Snow</option>\n<option value=\"Partly Cloudy\">Partly Cloudy</option>\n<option value=\"Rain\" selected>Rain</option>\n<option value=\"Rain Showers\">Rain Showers</option>\n<option value=\"Cloudy\">Cloudy</option>\n<option value=\"Freezing Drizzle\">Freezing Drizzle</option>\n<option value=\"Fog\">Fog</option>\n<option value=\"Windy\">Windy</option>\n<option value=\"Snow Showers\">Snow Showers</option>\n<option value=\"Rain and Snow\">Rain and Snow</option>\n<option value=\"Sleet\">Sleet</option>\n<option value=\"Very Cold\">Very Cold</option>\n<option value=\"Freezing Rain\">Freezing Rain</option>\n<option value=\"Thunderstorms\">Thunderstorms</option>\n<option value=\"Blizzard\">Blizzard</option>\n<option value=\"Snow Flurries\">Snow Flurries</option>\n<option value=\"Blowing Snow\">Blowing Snow</option>\n<option value=\"Drizzle\">Drizzle</option>\n<option value=\"Very Hot\">Very Hot</option>\n<option value=\"Smoke\">Smoke</option></select>\n<script type=\"application/json\" data-for=\"input_weather\">{\"maxItems\":1,\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n```\n:::\n\n```{.r .cell-code}\nselectizeInput(\n    inputId = \"input_region\",\n    label = h4(\"Select US Region to plot\"),\n    choices = c(\"Northeast\", \"North\", \"Midwest\", \"South\", \"West\"),\n    selected = \"West\",\n    multiple = FALSE,\n    options = list(maxItems = 1)\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"input_region-label\" for=\"input_region\">\n<h4>Select US Region to plot</h4>\n</label>\n<div>\n<select id=\"input_region\" class=\"form-control\"><option value=\"Northeast\">Northeast</option>\n<option value=\"North\">North</option>\n<option value=\"Midwest\">Midwest</option>\n<option value=\"South\">South</option>\n<option value=\"West\" selected>West</option></select>\n<script type=\"application/json\" data-for=\"input_region\">{\"maxItems\":1,\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n```\n:::\n\n```{.r .cell-code}\nactionButton(inputId = \"apply\", label = \"Apply\", icon = icon(\"play\"),  style=\"color: #fff; background-color: #337ab7; border-color: darkblue\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<button id=\"apply\" type=\"button\" class=\"btn btn-default action-button\" style=\"color: #fff; background-color: #337ab7; border-color: darkblue\">\n<i class=\"fa fa-play\" role=\"presentation\" aria-label=\"play icon\"></i>\nApply\n</button>\n```\n:::\n\n```{.r .cell-code}\nplotlyOutput(outputId = \"weatherplot\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"weatherplot\" style=\"width:100%; height:400px; \" class=\"plotly html-widget html-widget-output shiny-report-size shiny-report-theme\"></div>\n```\n:::\n\n```{.r .cell-code}\n# \n# usmap::.northeast_region\n# usmap::.north_central_region\n# usmap::.midwest_region\n# usmap::.south_region\n# usmap::.west_region\n```\n:::\n\n::: {.cell layout-align=\"center\" context='server'}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nweather_forecasts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/weather_forecasts.csv')\ncities <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/cities.csv')\ndata(citypop)\noutlook_meanings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/outlook_meanings.csv')\n\nweather_counts_t <- weather_forecasts %>% \n  filter(forecast_hours_before == 12) %>%\n  left_join(outlook_meanings) %>% \n  filter(forecast_outlook == \"SNOW\") %>% \n  count(state, city, forecast_outlook) %>% \n  mutate(label = paste0(city,\" (\",state, \")\")) %>% \n  group_by(state) %>% \n  arrange(desc(n)) %>%\n  filter(row_number() == 1) %>%  \n  ungroup() %>% \n  left_join(cities %>% select(city, lat, lon)) %>% \n  filter(!is.na(lat)) %>% \n  usmap_transform()\n\nplot_usmap(fill = \"#008080\", include = .west_region, alpha = 0.2, color = \"#2c3e50\" ) +\n  ggrepel::geom_label_repel(data = weather_counts_t,\n                            aes(x = x, y = y, label = label),\n                            size = 3, alpha = 0.8,\n                            label.r = unit(0.5, \"lines\"), label.size = 0.5,\n                            segment.color = \"red\", segment.size = 1,\n                            segment.alpha = 0.3, max.overlaps = 30) +\n  geom_point(data = weather_counts_t,\n             aes(x = x, y = y),\n             color = \"darkblue\", alpha = 0.5) +\n  labs(title = \"City with most number of days with RAIN\",\n       subtitle = \"Source: US Census 2010\") \n```\n\n::: {.cell-output-display}\n![](shinytry_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nweather_forecasts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/weather_forecasts.csv')\ncities <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/cities.csv')\ndata(citypop)\noutlook_meanings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/outlook_meanings.csv')\n\nweather_counts_t <- weather_forecasts %>% \n  filter(forecast_hours_before == 12) %>%\n  left_join(outlook_meanings) %>% \n  filter(forecast_outlook == \"SNOW\") %>% \n  count(state, city, forecast_outlook) %>% \n  mutate(label = paste0(city,\" (\",state, \")\")) %>% \n  group_by(state) %>% \n  arrange(desc(n)) %>%\n  filter(row_number() == 1) %>%  \n  ungroup() %>% \n  left_join(cities %>% select(city, lat, lon)) %>% \n  filter(!is.na(lat)) %>% \n  usmap_transform()\n\nplot_usmap(fill = \"#008080\", include = .west_region, alpha = 0.2, color = \"#2c3e50\" ) +\n  ggrepel::geom_label_repel(data = weather_counts_t,\n                            aes(x = x, y = y, label = label),\n                            size = 3, alpha = 0.8,\n                            label.r = unit(0.5, \"lines\"), label.size = 0.5,\n                            segment.color = \"red\", segment.size = 1,\n                            segment.alpha = 0.3, max.overlaps = 30) +\n  geom_point(data = weather_counts_t,\n             aes(x = x, y = y),\n             color = \"darkblue\", alpha = 0.5) +\n  labs(title = \"City with most number of days with RAIN\",\n       subtitle = \"Source: US Census 2010\") \n```\n\n::: {.cell-output-display}\n![](shinytry_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=672}\n:::\n:::\n\npreserve497677cefc7caf76\npreservee958f8d1f797306c\npreserve69d65213fe1e5d06\npreserved58adc99c3612940\npreservecbee85b357505315\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"selectize\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.12.4\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/selectize\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/selectize.min.js\",\"accessibility/js/selectize-plugin-a11y.min.js\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/selectize.bootstrap3.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.5.4\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.5.4\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"plotly-binding\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.10.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"plotly.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"plotly\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[false]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.10.0\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ionrangeslider-javascript\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.3.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/ionrangeslider\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/ion.rangeSlider.min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"strftime\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.9.2\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/strftime\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"strftime-min.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ionrangeslider-css\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"2.3.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/ionrangeslider\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/ion.rangeSlider.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"selectize\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.12.4\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/selectize\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/selectize.min.js\",\"accessibility/js/selectize-plugin-a11y.min.js\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/selectize.bootstrap3.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"selectize\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.12.4\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www/shared/selectize\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"js/selectize.min.js\",\"accessibility/js/selectize-plugin-a11y.min.js\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/selectize.bootstrap3.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"shiny\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.7.2\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"font-awesome\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"6.1.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontawesome\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"css/all.min.css\",\"css/v4-shims.min.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"fontawesome\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.3.0\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.5.4\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"www\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"1.5.4\"]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\",\"pkgVersion\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"plotly-binding\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.10.0\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"htmlwidgets\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"plotly.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"plotly\"]},{\"type\":\"logical\",\"attributes\":{},\"value\":[false]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.10.0\"]}]}]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"assertthat\",\"backports\",\"base\",\"bit\",\"bit64\",\"broom\",\"bslib\",\"cachem\",\"cellranger\",\"cli\",\"colorspace\",\"compiler\",\"crayon\",\"crosstalk\",\"curl\",\"data.table\",\"datasets\",\"DBI\",\"dbplyr\",\"digest\",\"dplyr\",\"DT\",\"ellipsis\",\"evaluate\",\"fansi\",\"farver\",\"fastmap\",\"fontawesome\",\"forcats\",\"foreign\",\"fs\",\"gargle\",\"generics\",\"ggplot2\",\"ggrepel\",\"glue\",\"googledrive\",\"googlesheets4\",\"graphics\",\"grDevices\",\"grid\",\"gtable\",\"haven\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"httr\",\"jquerylib\",\"jsonlite\",\"knitr\",\"labeling\",\"later\",\"lattice\",\"lazyeval\",\"lifecycle\",\"lubridate\",\"magrittr\",\"maptools\",\"memoise\",\"methods\",\"mime\",\"modelr\",\"munsell\",\"parallel\",\"pillar\",\"pkgconfig\",\"plotly\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"readxl\",\"reprex\",\"rgdal\",\"rlang\",\"rmarkdown\",\"rstudioapi\",\"rvest\",\"sass\",\"scales\",\"shiny\",\"shinyjs\",\"shinyWidgets\",\"sp\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tidytuesdayR\",\"tidyverse\",\"tools\",\"tzdb\",\"usethis\",\"usmap\",\"usmapdata\",\"utf8\",\"utils\",\"vctrs\",\"viridisLite\",\"vroom\",\"withr\",\"xfun\",\"xml2\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.2.1\",\"1.4.1\",\"4.2.1\",\"4.0.4\",\"4.0.5\",\"1.0.1\",\"0.4.0\",\"1.0.6\",\"1.1.0\",\"3.4.0\",\"2.0-3\",\"4.2.1\",\"1.5.1\",\"1.2.0\",\"4.3.2\",\"1.14.2\",\"4.2.1\",\"1.1.3\",\"2.2.1\",\"0.6.29\",\"1.0.10\",\"0.25\",\"0.3.2\",\"0.16\",\"1.0.3\",\"2.1.1\",\"1.1.0\",\"0.3.0\",\"0.5.2\",\"0.8-82\",\"1.5.2\",\"1.2.1\",\"0.1.3\",\"3.3.6\",\"0.9.1\",\"1.6.2\",\"2.0.0\",\"1.0.1\",\"4.2.1\",\"4.2.1\",\"4.2.1\",\"0.3.1\",\"2.5.1\",\"1.1.2\",\"0.5.3\",\"1.5.4\",\"1.6.6\",\"1.4.4\",\"0.1.4\",\"1.8.2\",\"1.40\",\"0.4.2\",\"1.3.0\",\"0.20-45\",\"0.2.2\",\"1.0.2\",\"1.8.0\",\"2.0.3\",\"1.1-4\",\"2.0.1\",\"4.2.1\",\"0.12\",\"0.1.9\",\"0.5.0\",\"4.2.1\",\"1.8.1\",\"2.0.3\",\"4.10.0\",\"1.2.0.1\",\"0.3.4\",\"2.5.1\",\"1.0.9\",\"2.1.2\",\"1.4.1\",\"2.0.2\",\"1.5-32\",\"1.0.5\",\"2.19\",\"0.14\",\"1.0.3\",\"0.4.2\",\"1.2.1\",\"1.7.2\",\"2.1.0\",\"0.7.3\",\"1.5-0\",\"4.2.1\",\"1.7.8\",\"1.4.1\",\"3.1.8\",\"1.2.1\",\"1.1.2\",\"1.0.2\",\"1.3.2\",\"4.2.1\",\"0.3.0\",\"2.1.6\",\"0.6.0\",\"0.1.0\",\"1.2.2\",\"4.2.1\",\"0.4.1\",\"0.4.1\",\"1.5.7\",\"2.5.0\",\"0.32\",\"1.3.3\",\"1.8-4\",\"2.3.5\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [
      "shinytry_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {
      "preserve497677cefc7caf76": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-start\">\nknitr::opts_chunk$set(\n  echo = TRUE,\n  eval = TRUE,\n  message = FALSE,\n  warning = FALSE,\n  fig.align = \"center\"\n)\n</script>\n",
      "preserve69d65213fe1e5d06": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\noutput$distPlot <- renderPlot({\n  x <- faithful[, 2]  # Old Faithful Geyser data\n  bins <- seq(min(x), max(x), length.out = input$bins + 1)\n  hist(x, breaks = bins, col = 'darkgray', border = 'white')\n})\n</script>\n",
      "preservecbee85b357505315": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n",
      "preserved58adc99c3612940": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlibrary(tidyverse)\nlibrary(rmarkdown)\nlibrary(plotly)\nlibrary(shiny)\nlibrary(shinyWidgets)\nlibrary(shinyjs)\nlibrary(usmap)\nlibrary(ggrepel)\nweather_forecasts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/weather_forecasts.csv')\ncities <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/cities.csv')\noutlook_meanings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/outlook_meanings.csv')\nweather_counts <- eventReactive(\n  eventExpr = input$input_weather,\n  valueExpr = {\n      weather_forecasts %>% \n      filter(forecast_hours_before == 12) %>%\n      left_join(outlook_meanings) %>% \n      filter(meaning == input$input_weather) %>% \n      count(state, city, forecast_outlook) %>% \n      mutate(label = paste0(city,\" (\",state, \")\")) %>% \n      group_by(state) %>% \n      arrange(desc(n)) %>%\n      filter(row_number() == 1) %>%  \n      ungroup() %>% \n      left_join(cities %>% select(city, lat, lon)) %>% \n      filter(!is.na(lat)) %>% \n      usmap_transform()\n  },\n  ignoreNULL = FALSE\n)\noutput$weatherplot <- renderPlotly({\n    g <- plot_usmap(fill = \"#008080\", alpha = 0.2, color = \"#2c3e50\" ) +\n      geom_point(data = weather_counts(),\n             aes(x = x, y = y),\n             color = \"darkblue\", alpha = 0.5) +\n      geom_label(data = weather_counts(),\n                            aes(x = x, y = y, label = city),\n                            size = 3, alpha = 0.8, force_pull = 100, nudge_x = 1) \n  # ggrepel::geom_label_repel(data = weather_counts(),\n  #                           aes(x = x, y = y, label = city),\n  #                           size = 3, alpha = 0.8,\n  #                           label.r = unit(0.5, \"lines\"), label.size = 0.5,\n  #                           segment.color = \"red\", segment.size = 1,\n  #                           segment.alpha = 0.3, max.overlaps = 30) +\n  \n  # labs(title = \"City with most number of days with RAIN\",\n  #      subtitle = \"Source: US Census 2010\") \n    ggplotly(g)\n})\n</script>\n",
      "preservee958f8d1f797306c": "\n<script type=\"application/shiny-prerendered\" data-context=\"server\">\nlibrary(tidyverse)\nlibrary(rmarkdown)\nlibrary(plotly)\nlibrary(shiny)\nlibrary(shinyWidgets)\nlibrary(shinyjs)\nweather_forecasts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-12-20/weather_forecasts.csv')\nerror_counts <- eventReactive(\n  eventExpr = input$input_error,\n  valueExpr = {\n      weather_forecasts %>% \n  count(possible_error, state) %>% \n  arrange(state, possible_error) %>% \n  filter(possible_error == input$input_error)\n  },\n  ignoreNULL = FALSE\n)\noutput$errorplot <- renderPlotly({\n    g <- error_counts() %>% \n  filter(possible_error == input$input_error) %>% \n  ggplot(aes(x = state, y = n)) +\n  geom_col(aes(color = state,fill = state), alpha = 0.2, position = \"dodge\") +\n  theme_minimal() +\n  labs(\n    title = \"Possible Error counts by state and error type\",\n    x = \"\",\n    y = \"\"\n  ) +\n  theme(legend.position = \"none\", axis.text.x = element_blank()) +\n  coord_flip() +\n    geom_label(aes(x = state, y = n, label = n))\n    ggplotly(g)\n})\n</script>\n"
    },
    "postProcess": true
  }
}