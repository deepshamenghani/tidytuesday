[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "African_language_sentiment.html",
    "href": "African_language_sentiment.html",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "",
    "text": "In this post, I will analyse the #TidyTuesday African Language Sentiment data set.\nThe data comes from AfriSenti: Sentiment Analysis dataset for 14 African languages via @shmuhammad2004 (the corresponding author on the associated paper, and an active member of the R4DS Online Learning Community Slack)."
  },
  {
    "objectID": "African_language_sentiment.html#load-libraries",
    "href": "African_language_sentiment.html#load-libraries",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "1 Load libraries",
    "text": "1 Load libraries\n\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\n\n# EDA\nlibrary(tidyverse)\nlibrary(highcharter)\n\n# Shiny in md\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(shinyWidgets)"
  },
  {
    "objectID": "African_language_sentiment.html#load-data",
    "href": "African_language_sentiment.html#load-data",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "2 Load data",
    "text": "2 Load data\n\nafrisenti <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/afrisenti.csv')\nlanguages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/languages.csv')\nlanguage_scripts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/language_scripts.csv')\nlanguage_countries <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/language_countries.csv')\ncountry_regions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/country_regions.csv')"
  },
  {
    "objectID": "African_language_sentiment.html#data-editing",
    "href": "African_language_sentiment.html#data-editing",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "3 Data editing",
    "text": "3 Data editing\n\nlanguage_count = afrisenti |> \n  count(language_iso_code, label) |> \n  group_by(language_iso_code) |> \n  mutate(perc = (n/sum(n))*100) |> \n  ungroup() |> \n  select(-n) \n\nlanguage_countries_comb <- language_countries |> \n  group_by(language_iso_code) |> \n  summarise(countrylist = paste(country, collapse = \", \"),\n            countrycount = n_distinct(country)) |> \n  ungroup()\n\ncolor_df <- data.frame(label = c(\"positive\", \"neutral\", \"negative\"), colorvalue = c(\"#007A4D\", \"#FFB612\", \"#DE3831\")) \n\nlanguage_perc <- language_count |> \n  left_join(language_countries_comb) |> \n  left_join(languages) |> \n  left_join(color_df)\n\n\nsaveRDS(language_perc, \"./data/language_perc.rds\")"
  },
  {
    "objectID": "African_language_sentiment.html#highcharter-plot-function",
    "href": "African_language_sentiment.html#highcharter-plot-function",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "4 Highcharter plot function",
    "text": "4 Highcharter plot function\n\nhighcharter_plot_func <- function(data) {\n  data |> \n    hchart(type = \"column\", hcaes(x = language, y = perc, color = colorvalue))  |> \n    hc_plotOptions(column = list(stacking = \"normal\")) |> \n    hc_yAxis(max = 100, min = 0, labels = list(format = \"{value}%\"),\n                showFirstLabel = FALSE, title = \"\") |> \n    hc_tooltip(\n      useHTML = TRUE,                              \n      formatter = JS(\n        \"\n        function(){\n          outHTML = '<b>' + this.point.language + '<br>' + this.point.countrylist + '<br>' + this.point.label + '<br>' + Math.round(this.y) + '%'\n          return(outHTML)\n        }\n  \n        \"\n      ),\n      shape = \"callout\", \n      borderWidth = 0 \n    ) |> \n    hc_xAxis(\n      title = \"\"\n    )\n}\n\nhighcharter_plot_func(language_perc)\n\n\n\n\n\n\n\ndump(list = c(\"highcharter_plot_func\"), file = \"./functions/highcharter_plot_func.R\", append=FALSE)"
  },
  {
    "objectID": "African_language_sentiment.html#shiny-output-from-the-above-code",
    "href": "African_language_sentiment.html#shiny-output-from-the-above-code",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "5 Shiny output from the above code",
    "text": "5 Shiny output from the above code\nhr()\n\n{r}\n\nsliderInput(\n    inputId = \"country_count\",\n    label = h4(\"Minimum numbre of countries the language is spoken in\"),\n    min = 1,\n    max = 4,\n    value = 1\n)\n\nactionButton(inputId = \"apply\", label = \"Apply\", icon(\"cog\"), class = \"btn btn-primary\")\n\nhighchartOutput(outputId = \"language_plot\")\nhr()\n\n{r}\n#| context: server\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(highcharter)\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(shinyWidgets)\n\nlanguage_perc <- read_rds(\"./data/language_perc.rds\")\nsource(\"./functions/highcharter_plot_func.R\")\n\nlanguage_df <- eventReactive(input$apply, {\n  language_perc |> \n      filter(countrycount >= input$country_count)\n}, ignoreNULL = FALSE)\n\noutput$language_plot <- renderHighchart({\n    language_df() |> \n    highcharter_plot_func()\n})\nhr()\n\n\n\n\nMinimum numbre of countries the language is spoken in\n\n\n\n\n\n\n\nApply\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nYou can find my github code repository here. Follow me on medium and linkedIn to stay tuned for my next article."
  },
  {
    "objectID": "African_language_sentiment_backup.html",
    "href": "African_language_sentiment_backup.html",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "",
    "text": "In this post, I will analyse the #TidyTuesday African Language Sentiment data set.\nThe data comes from AfriSenti: Sentiment Analysis dataset for 14 African languages via @shmuhammad2004 (the corresponding author on the associated paper, and an active member of the R4DS Online Learning Community Slack)."
  },
  {
    "objectID": "African_language_sentiment_backup.html#load-libraries",
    "href": "African_language_sentiment_backup.html#load-libraries",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "1 Load libraries",
    "text": "1 Load libraries\n\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\n\n# EDA\nlibrary(tidyverse)\nlibrary(highcharter)\n\n# Shiny in md\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(shinyWidgets)"
  },
  {
    "objectID": "African_language_sentiment_backup.html#load-data",
    "href": "African_language_sentiment_backup.html#load-data",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "2 Load data",
    "text": "2 Load data"
  },
  {
    "objectID": "African_language_sentiment_backup.html#data-editing",
    "href": "African_language_sentiment_backup.html#data-editing",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "3 Data editing",
    "text": "3 Data editing"
  },
  {
    "objectID": "African_language_sentiment_backup.html#highcharter-plot-function",
    "href": "African_language_sentiment_backup.html#highcharter-plot-function",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "4 Highcharter plot function",
    "text": "4 Highcharter plot function"
  },
  {
    "objectID": "African_language_sentiment_backup.html#incorporating-shiny-in-quarto-markdown",
    "href": "African_language_sentiment_backup.html#incorporating-shiny-in-quarto-markdown",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "5 Incorporating Shiny in Quarto markdown",
    "text": "5 Incorporating Shiny in Quarto markdown\nStart with adding the shiny server to the yaml component of the markdown and install the ‘rmarkdown’ package. Below is what that looks like.\n\n---\ntitle: \"TidyTuesday: African Language Sentiment\"\ndate: 2023-02-28 \nauthor:\n  - name: Deepsha Menghani \n    url: https://github.com/deepshamenghani\ntitle-block-banner: true\nformat:\n  html:\n    theme: flatly\n    code-fold: false\n    code-tools: true\n    toc: false\n    number-sections: true\nlink-citations: yes\nserver: shiny\n---\n\nAdd any input components to your shiny app before adding interactivity. Below is what the UI component looks like with an input command and a call to plot the output which will be created within the server.\n\nsliderInput(\n    inputId = \"country_count\",\n    label = h4(\"Minimum numbre of countries the language is spoken in\"),\n    min = 1,\n    max = 4,\n    value = 1\n)\n\nactionButton(inputId = \"apply\", label = \"Apply\", icon(\"cog\"), class = \"btn btn-primary\")\n\nhighchartOutput(outputId = \"language_plot\")\n\nThe above call to plot the output is generated within the server code chunk that begins with ‘#| context: server’. Below is what that looks like.\n\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\n\n# EDA\nlibrary(tidyverse)\nlibrary(highcharter)\n\n# Shiny in md\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(shinyWidgets)\n\nafrisenti <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/afrisenti.csv')\nlanguages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/languages.csv')\nlanguage_scripts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/language_scripts.csv')\nlanguage_countries <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/language_countries.csv')\ncountry_regions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/country_regions.csv')\n\nlanguage_count = afrisenti |> \n  count(language_iso_code, label) |> \n  group_by(language_iso_code) |> \n  mutate(perc = (n/sum(n))*100) |> \n  ungroup() |> \n  select(-n) \n\nlanguage_countries_comb <- language_countries |> \n  group_by(language_iso_code) |> \n  summarise(countrylist = paste(country, collapse = \", \"),\n            countrycount = n_distinct(country)) |> \n  ungroup()\n\ncolor_df <- data.frame(label = c(\"positive\", \"neutral\", \"negative\"), colorvalue = c(\"#007A4D\", \"#FFB612\", \"#DE3831\")) \n\nlanguage_perc <- language_count |> \n  left_join(language_countries_comb) |> \n  left_join(languages) |> \n  left_join(color_df)\n\n#| context: server\n\nlanguage_df <- eventReactive(\n  eventExpr = input$apply,\n  valueExpr = {\n      language_perc |> \n      filter(countrycount >= input$country_count)\n  },\n  ignoreNULL = FALSE\n)\n\noutput$language_plot <- renderHighchart({\n    language_df() |> \n    highcharter_plot_func()\n  # hchart(type = \"column\", hcaes(x = language, y = perc, color = colorvalue))  |> \n  # hc_plotOptions(column = list(stacking = \"normal\")) |> \n  # hc_yAxis(max = 100, min = 0, labels = list(format = \"{value}%\"),\n  #             showFirstLabel = FALSE, title = \"\") |> \n  # hc_tooltip(\n  #   useHTML = TRUE,                              \n  #   formatter = JS(\n  #     \"\n  #     function(){\n  #       outHTML = '<b>' + this.point.language + '<br>' + this.point.countrylist + '<br>' + this.point.label + '<br>' + Math.round(this.y) + '%'\n  #       return(outHTML)\n  #     }\n  # \n  #     \"\n  #   ),\n  #   shape = \"callout\", \n  #   borderWidth = 0 \n  # ) |> \n  # hc_xAxis(\n  #   title = \"\"\n  # )\n\n})"
  },
  {
    "objectID": "African_language_sentiment_backup.html#shiny-output-from-the-above-code",
    "href": "African_language_sentiment_backup.html#shiny-output-from-the-above-code",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "6 Shiny output from the above code",
    "text": "6 Shiny output from the above code\n\n\n\n\nMinimum numbre of countries the language is spoken in\n\n\n\n\n\n\n\nApply\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nYou can find my github code repository here. Follow me on medium and linkedIn to stay tuned for my next article."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "",
    "text": "In this post, I will analyse the #TidyTuesday African Language Sentiment data set.\nThe data comes from AfriSenti: Sentiment Analysis dataset for 14 African languages via @shmuhammad2004 (the corresponding author on the associated paper, and an active member of the R4DS Online Learning Community Slack)."
  },
  {
    "objectID": "index.html#load-libraries",
    "href": "index.html#load-libraries",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "1 Load libraries",
    "text": "1 Load libraries\n\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\n\n# EDA\nlibrary(tidyverse)\nlibrary(highcharter)\n\n# Shiny in md\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(shinyWidgets)\n\nlibrary(htmltools)\nlibrary(htmlwidgets)"
  },
  {
    "objectID": "index.html#load-data",
    "href": "index.html#load-data",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "2 Load data",
    "text": "2 Load data\n\nafrisenti <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/afrisenti.csv')\nlanguages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/languages.csv')\nlanguage_scripts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/language_scripts.csv')\nlanguage_countries <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/language_countries.csv')\ncountry_regions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-28/country_regions.csv')"
  },
  {
    "objectID": "index.html#data-editing",
    "href": "index.html#data-editing",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "3 Data editing",
    "text": "3 Data editing\n\nlanguage_count = afrisenti |> \n  count(language_iso_code, label) |> \n  group_by(language_iso_code) |> \n  mutate(perc = (n/sum(n))*100) |> \n  ungroup() |> \n  select(-n) \n\nlanguage_countries_comb <- language_countries |> \n  group_by(language_iso_code) |> \n  summarise(countrylist = paste(country, collapse = \", \"),\n            countrycount = n_distinct(country)) |> \n  ungroup()\n\ncolor_df <- data.frame(label = c(\"positive\", \"neutral\", \"negative\"), colorvalue = c(\"#007A4D\", \"#FFB612\", \"#DE3831\")) \n\nlanguage_perc <- language_count |> \n  left_join(language_countries_comb) |> \n  left_join(languages) |> \n  left_join(color_df)\n\n\nsaveRDS(language_perc, \"./data/language_perc.rds\")"
  },
  {
    "objectID": "index.html#highcharter-plot-function",
    "href": "index.html#highcharter-plot-function",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "4 Highcharter plot function",
    "text": "4 Highcharter plot function\n\nhighcharter_plot_func <- function(data) {\n  data |> \n    hchart(type = \"column\", hcaes(x = language, y = perc, color = colorvalue))  |> \n    hc_plotOptions(column = list(stacking = \"normal\")) |> \n    hc_yAxis(max = 100, min = 0, labels = list(format = \"{value}%\"),\n                showFirstLabel = FALSE, title = \"\") |> \n    hc_tooltip(\n      useHTML = TRUE,                              \n      formatter = JS(\n        \"\n        function(){\n          outHTML = '<b>' + this.point.language + '<br>' + this.point.countrylist + '<br>' + this.point.label + '<br>' + Math.round(this.y) + '%'\n          return(outHTML)\n        }\n  \n        \"\n      ),\n      shape = \"callout\", \n      borderWidth = 0 \n    ) |> \n    hc_xAxis(\n      title = \"\"\n    )\n}\n\nhighcharter_plot_func(language_perc)\n\n\n\n\n\n\n\ndump(list = c(\"highcharter_plot_func\"), file = \"./functions/highcharter_plot_func.R\", append=FALSE)"
  },
  {
    "objectID": "index.html#shiny-output-from-the-above-code",
    "href": "index.html#shiny-output-from-the-above-code",
    "title": "TidyTuesday: African Language Sentiment",
    "section": "5 Shiny output from the above code",
    "text": "5 Shiny output from the above code\nhr()\n\n{r}\n\nsliderInput(\n    inputId = \"country_count\",\n    label = h4(\"Minimum numbre of countries the language is spoken in\"),\n    min = 1,\n    max = 4,\n    value = 1\n)\n\nactionButton(inputId = \"apply\", label = \"Apply\", icon(\"cog\"), class = \"btn btn-primary\")\n\nhighchartOutput(outputId = \"language_plot\")\nhr()\n\n{r}\n#| context: server\n# For loading Tidy Tuesday data\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(highcharter)\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(shinyWidgets)\n\nlanguage_perc <- read_rds(\"./data/language_perc.rds\")\nsource(\"./functions/highcharter_plot_func.R\")\n\nlanguage_df <- eventReactive(input$apply, {\n  language_perc |> \n      filter(countrycount >= input$country_count)\n}, ignoreNULL = FALSE)\n\noutput$language_plot <- renderHighchart({\n    language_df() |> \n    highcharter_plot_func()\n})\nhr()\n\n\n\n\nMinimum numbre of countries the language is spoken in\n\n\n\n\n\n\n\nApply\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nYou can find my github code repository here. Follow me on medium and linkedIn to stay tuned for my next article."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]